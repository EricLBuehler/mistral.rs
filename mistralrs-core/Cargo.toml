[package]
name = "mistralrs-core"
readme = "README.md"
authors = ["Eric Buehler"]
version.workspace = true
edition.workspace = true
description.workspace = true
repository.workspace = true
keywords.workspace = true
categories.workspace = true
license.workspace = true
homepage.workspace = true

[dependencies]
anyhow.workspace = true
candle-core.workspace = true
candle-nn.workspace = true
serde.workspace = true
serde_json.workspace = true
candle-flash-attn = { workspace = true, optional = true }
dirs.workspace = true
hf-hub.workspace = true
thiserror.workspace = true
tokenizers.workspace = true
tqdm.workspace = true
chrono.workspace = true
minijinja.workspace = true
minijinja-contrib.workspace = true
either.workspace = true
indexmap.workspace = true
half.workspace = true
accelerate-src = { workspace = true, optional = true }
intel-mkl-src = { workspace = true, optional = true }
tracing.workspace = true
rand.workspace = true
rand_distr.workspace = true
regex-automata.workspace = true
rustc-hash.workspace = true
vob.workspace = true
cfgrammar.workspace = true
lrtable.workspace = true
galil-seiferas.workspace = true
clap.workspace = true
radix_trie.workspace = true
bytemuck.workspace = true
rayon.workspace = true
tokio.workspace = true
tokio-rayon.workspace = true
rand_isaac.workspace = true
futures.workspace = true
pyo3 = { workspace = true, optional = true }
indicatif.workspace = true
async-trait.workspace = true
once_cell.workspace = true
toml.workspace = true
strum.workspace = true
image.workspace = true
derive_more = { workspace = true}
akin.workspace = true
variantly.workspace = true
tracing-subscriber.workspace = true
derive-new.workspace = true
itertools.workspace = true
sysinfo.workspace = true
mistralrs-vision.workspace = true
csv.workspace = true
reqwest.workspace = true
base64.workspace = true
bytemuck_derive.workspace = true
mistralrs-paged-attn = { workspace = true, optional = true }
mistralrs-quant.workspace = true
uuid = { workspace = true, features = ["v4"] }
utoipa = { workspace = true, optional = true }
schemars.workspace = true
serde_yaml.workspace = true
regex.workspace = true
serde_plain.workspace = true
as-any.workspace = true
float8.workspace = true
llguidance.workspace = true
toktrie_hf_tokenizers.workspace = true
candle-flash-attn-v3 = { workspace = true, optional = true }
safetensors.workspace = true
serde-big-array.workspace = true
interprocess.workspace = true
urlencoding.workspace = true
scraper.workspace = true
html2text.workspace = true
tokio-tungstenite.workspace = true
http.workspace = true
ordered-float.workspace = true
hashbrown.workspace = true
parking_lot.workspace = true
ahash.workspace = true
num-traits.workspace = true
libc.workspace = true
bm25.workspace = true
rubato.workspace = true
rustfft.workspace = true
hound.workspace = true
apodize.workspace = true
symphonia.workspace = true
mistralrs-audio.workspace = true
rust-mcp-schema.workspace = true
mistralrs-mcp = { workspace = true, features = ["utoipa"] }
statrs.workspace = true

[target.'cfg(target_os = "macos")'.dependencies]
objc = { workspace = true, optional = true }
metal = { workspace = true, optional = true }

[features]
pyo3_macros = ["pyo3", "mistralrs-mcp/pyo3_macros"]
cuda = [
    "candle-core/cuda",
    "candle-nn/cuda",
    "dep:bindgen_cuda",
    "mistralrs-quant/cuda",
    "dep:mistralrs-paged-attn",
    "mistralrs-paged-attn/cuda",
    "float8/cuda",
]
cudnn = ["candle-core/cudnn"]
metal = [
    "candle-core/metal",
    "candle-nn/metal",
    "mistralrs-quant/metal",
    "dep:objc",
    "dep:mistralrs-paged-attn",
    "mistralrs-paged-attn/metal",
    "dep:metal"
]
flash-attn = ["cuda", "dep:candle-flash-attn"]
flash-attn-v3 = ["cuda", "dep:candle-flash-attn-v3"]
accelerate = ["candle-core/accelerate", "candle-nn/accelerate", "mistralrs-quant/accelerate"]
mkl = ["candle-core/mkl", "candle-nn/mkl"]
nccl = ["cuda", "mistralrs-quant/nccl"]
utoipa = ["dep:utoipa"]
ring = ["mistralrs-quant/ring"]

[build-dependencies]
bindgen_cuda = { workspace = true, optional = true }
