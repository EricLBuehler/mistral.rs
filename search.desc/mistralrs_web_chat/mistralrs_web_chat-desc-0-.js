searchState.loadedDescShard("mistralrs_web_chat", 0, "Append a chat message to the specified chat file.\nRequest to append a (partial) assistant message to a chat\nAppends a partial assistant response (or any role) to the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAccepts multipart image upload, stores it under …\nAccepts multipart text file upload and returns the file …\nContext for managing vision messages and image buffer.\nReturns the argument unchanged.\nPer-connection task.\nCalls <code>U::from(self)</code>.\nGeneric helper to stream tokens and forward them to the …\nValidate that a file path is safe and within the uploads …\nUpgrades an HTTP request to a WebSocket connection.\nDistinguish at runtime which kind of model we have loaded.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIn-situ quantization to apply, defaults to 6-bit.\nPort to listen on (default: 8080)\nRepeated flag for text‑only models\nRepeated flag for vision models\nDetermine the base cache directory for the application. …")